// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: query.sql

package member

import (
	"context"
	"database/sql"
)

const createMember = `-- name: CreateMember :execresult
INSERT INTO members(name, status, user_id)
VALUES (?, ?, ?)
`

type CreateMemberParams struct {
	Name   string
	Status string
	UserID sql.NullInt64
}

func (q *Queries) CreateMember(ctx context.Context, arg CreateMemberParams) (sql.Result, error) {
	return q.db.ExecContext(ctx, createMember, arg.Name, arg.Status, arg.UserID)
}

const getMemberByName = `-- name: GetMemberByName :one
SELECT user_id, name, status
FROM members
WHERE name = ?
LIMIT 1
`

func (q *Queries) GetMemberByName(ctx context.Context, name string) (Member, error) {
	row := q.db.QueryRowContext(ctx, getMemberByName, name)
	var i Member
	err := row.Scan(&i.UserID, &i.Name, &i.Status)
	return i, err
}
